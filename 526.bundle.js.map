{"version":3,"file":"526.bundle.js","mappings":"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","sources":["webpack://frontend-performance-basecamp/./src/utils/apiClient.ts","webpack://frontend-performance-basecamp/./src/apis/gifAPIService.ts","webpack://frontend-performance-basecamp/./src/pages/Search/hooks/useGifSearch.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchBar/SearchBar.module.css?6e52","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchBar/SearchBar.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/ResultTitle/ResultTitle.module.css?5009","webpack://frontend-performance-basecamp/./src/pages/Search/components/ResultTitle/ResultTitle.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/GifItem/GifItem.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/GifItem/GifItem.module.css?f94b","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchResult/SearchResult.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchResult/SearchResult.module.css?fa48","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistInfo/ArtistInfo.module.css?1a7e","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistInfo/ArtistInfo.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistList/ArtistList.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/HelpPanel/artistUtil.ts","webpack://frontend-performance-basecamp/./src/pages/Search/components/HelpPanel/HelpPanel.module.css?d962","webpack://frontend-performance-basecamp/./src/pages/Search/components/HelpPanel/HelpPanel.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/Search.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/Search.module.css?33b5"],"sourcesContent":["export class ApiError extends Error {\n  constructor(public status: number, message?: string) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nexport const apiClient = {\n  fetch: async <T>(url: URL): Promise<T> => {\n    const response = await fetch(url.toString());\n    if (!response.ok) {\n      throw new ApiError(response.status, `HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  },\n\n  appendSearchParams: (url: URL, params: Record<string, string>): URL => {\n    const newUrl = new URL(url.toString());\n    Object.entries(params).forEach(([key, value]) => {\n      newUrl.searchParams.append(key, value);\n    });\n    return newUrl;\n  }\n};\n","import { GifsResult } from '@giphy/js-fetch-api';\nimport { IGif } from '@giphy/js-types';\n\nimport { GifImageModel } from '../models/image/gifImage';\nimport { apiClient, ApiError } from '../utils/apiClient';\n\nconst API_KEY = process.env.GIPHY_API_KEY;\nif (!API_KEY) {\n  throw new Error('GIPHY_API_KEY is not set in environment variables');\n}\n\nconst BASE_URL = 'https://api.giphy.com/v1/gifs';\nconst DEFAULT_FETCH_COUNT = 16;\n\nconst convertResponseToModel = (gifList: IGif[]): GifImageModel[] => {\n  return gifList.map(({ id, title, images }) => {\n    return {\n      id,\n      title: title ?? '',\n      imageUrl: images.original.url\n    };\n  });\n};\n\nconst fetchGifs = async (url: URL): Promise<GifImageModel[]> => {\n  try {\n    const gifs = await apiClient.fetch<GifsResult>(url);\n\n    return convertResponseToModel(gifs.data);\n  } catch (error) {\n    if (error instanceof ApiError) {\n      console.error(`API Error: ${error.status} - ${error.message}`);\n    } else {\n      console.error('Unexpected error:', error);\n    }\n    throw error;\n  }\n};\n\nexport const gifAPIService = {\n  /**\n   * treding gif 목록을 가져옵니다.\n   * @returns {Promise<GifImageModel[]>}\n   * @ref https://developers.giphy.com/docs/api/endpoint#!/gifs/trending\n   */\n  getTrending: async (): Promise<GifImageModel[]> => {\n    const url = apiClient.appendSearchParams(new URL(`${BASE_URL}/trending`), {\n      api_key: API_KEY,\n      limit: `${DEFAULT_FETCH_COUNT}`,\n      rating: 'g'\n    });\n\n    return fetchGifs(url);\n  },\n  /**\n   * 검색어에 맞는 gif 목록을 가져옵니다.\n   * @param {string} keyword\n   * @param {number} page\n   * @returns {Promise<GifImageModel[]>}\n   * @ref https://developers.giphy.com/docs/api/endpoint#!/gifs/search\n   */\n  searchByKeyword: async (keyword: string, page: number): Promise<GifImageModel[]> => {\n    const url = apiClient.appendSearchParams(new URL(`${BASE_URL}/search`), {\n      api_key: API_KEY,\n      q: keyword,\n      limit: `${DEFAULT_FETCH_COUNT}`,\n      offset: `${page * DEFAULT_FETCH_COUNT}`,\n      rating: 'g',\n      lang: 'en'\n    });\n\n    return fetchGifs(url);\n  }\n};\n","import { ChangeEvent, useEffect, useState } from 'react';\n\nimport { gifAPIService } from '../../../apis/gifAPIService';\nimport { GifImageModel } from '../../../models/image/gifImage';\n\nconst DEFAULT_PAGE_INDEX = 0;\n\nexport const SEARCH_STATUS = {\n  BEFORE_SEARCH: 'BEFORE_SEARCH',\n  LOADING: 'LOADING',\n  FOUND: 'FOUND',\n  NO_RESULT: 'NO_RESULT',\n  ERROR: 'ERROR'\n} as const;\n\nexport type SearchStatus = typeof SEARCH_STATUS[keyof typeof SEARCH_STATUS];\n\nconst useGifSearch = () => {\n  const [status, setStatus] = useState<SearchStatus>(SEARCH_STATUS.BEFORE_SEARCH);\n  const [currentPageIndex, setCurrentPageIndex] = useState(DEFAULT_PAGE_INDEX);\n  const [gifList, setGifList] = useState<GifImageModel[]>([]);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const updateSearchKeyword = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const resetSearch = () => {\n    setStatus(SEARCH_STATUS.LOADING);\n    setCurrentPageIndex(DEFAULT_PAGE_INDEX);\n    setGifList([]);\n    setErrorMessage(null);\n  };\n\n  const handleError = (error: unknown) => {\n    setStatus(SEARCH_STATUS.ERROR);\n    setErrorMessage(error instanceof Error ? error.message : 'An unknown error occurred');\n  };\n\n  const searchByKeyword = async (): Promise<void> => {\n    resetSearch();\n\n    try {\n      const gifs = await gifAPIService.searchByKeyword(searchKeyword, DEFAULT_PAGE_INDEX);\n\n      if (gifs.length === 0) {\n        setStatus(SEARCH_STATUS.NO_RESULT);\n        return;\n      }\n\n      setGifList(gifs);\n      setStatus(SEARCH_STATUS.FOUND);\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  const loadMore = async (): Promise<void> => {\n    const nextPageIndex = currentPageIndex + 1;\n\n    try {\n      const newGitList = await gifAPIService.searchByKeyword(searchKeyword, nextPageIndex);\n\n      setGifList((prevGifList) => [...prevGifList, ...newGitList]);\n      setCurrentPageIndex(nextPageIndex);\n    } catch (error) {\n      handleError(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      if (status !== SEARCH_STATUS.BEFORE_SEARCH) return;\n\n      try {\n        const gifs = await gifAPIService.getTrending();\n        setGifList(gifs);\n      } catch (error) {\n        handleError(error);\n      }\n    };\n\n    fetchTrending();\n  }, []);\n\n  return {\n    status,\n    searchKeyword,\n    gifList,\n    errorMessage,\n    searchByKeyword,\n    updateSearchKeyword,\n    loadMore\n  } as const;\n};\n\nexport default useGifSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbarSection\":\"_yRyLCVW_8BrXNu2Ae1I\",\"searchbarContainer\":\"p1yl5o1LGzbcgKpLvnzP\",\"searchbarTitle\":\"tmllUNaCFiCyJ_2LTNUL\",\"searchInput\":\"XZuzNzJP7hkmuiygaxt6\",\"searchButton\":\"_HPJ5AEs_c3uawxix3Uk\"};","import React from 'react';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport styles from './SearchBar.module.css';\n\ntype SearchbarProps = {\n  searchKeyword: string;\n  onEnter: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n};\n\nconst SearchBar = ({ searchKeyword, onEnter, onChange, onSearch }: SearchbarProps) => {\n  return (\n    <section className={styles.searchbarSection}>\n      <h3 className={styles.searchbarTitle}>- find the best gif now -</h3>\n      <div className={styles.searchbarContainer}>\n        <input\n          className={styles.searchInput}\n          type=\"text\"\n          value={searchKeyword}\n          onKeyUp={onEnter}\n          onChange={onChange}\n        />\n        <button className={styles.searchButton} type=\"button\" onClick={onSearch}>\n          <AiOutlineSearch color=\"white\" size=\"2rem\" />\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"resultTitle\":\"bMX5kwo8awW0wG6uP_MM\"};","import { SearchStatus, SEARCH_STATUS } from '../../hooks/useGifSearch';\n\nimport styles from './ResultTitle.module.css';\n\ntype ResultTitleProps = {\n  status: SearchStatus;\n};\n\nconst ResultTitle = ({ status }: ResultTitleProps) => {\n  switch (status) {\n    case SEARCH_STATUS.NO_RESULT:\n      return (\n        <h3 className={styles.resultTitle}>\n          <span>Nothing</span>🥲\n        </h3>\n      );\n    case SEARCH_STATUS.BEFORE_SEARCH:\n      return (\n        <h3 className={styles.resultTitle}>\n          🔥 <span>Trending Now</span> 🔥\n        </h3>\n      );\n    case SEARCH_STATUS.ERROR:\n      return (\n        <h3 className={styles.resultTitle}>\n          <span>Something Went Wrong</span>🥲\n        </h3>\n      );\n    default:\n      return (\n        <h3 className={styles.resultTitle}>\n          <span>We Found...</span>\n        </h3>\n      );\n  }\n};\n\nexport default ResultTitle;\n","import { GifImageModel } from '../../../../models/image/gifImage';\n\nimport styles from './GifItem.module.css';\n\ntype GifItemProps = Omit<GifImageModel, 'id'>;\n\nconst GifItem = ({ imageUrl = '', title = '' }: GifItemProps) => {\n  return (\n    <div className={styles.gifItem}>\n      <img className={styles.gifImage} src={imageUrl} />\n      <div className={styles.gifTitleContainer}>\n        <div className={styles.gifTitleBg}></div>\n        <h4 className={styles.gifTitle}>{title}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default GifItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"gifItem\":\"d9Kx4D_C6coYB4Bq3Y_D\",\"gifImage\":\"_qDfMSZFh0Sj5QB2_372\",\"gifTitleContainer\":\"jmVam4uDiwDe9X0kov9s\",\"gifTitleBg\":\"bESWa5xgNgk178EbWGcc\",\"gifTitle\":\"x8ChTAzHTz86NM8umGRm\"};","import { GifImageModel } from '../../../../models/image/gifImage';\n\nimport ResultTitle from '../ResultTitle/ResultTitle';\nimport GifItem from '../GifItem/GifItem';\n\nimport { SearchStatus, SEARCH_STATUS } from '../../hooks/useGifSearch';\n\nimport styles from './SearchResult.module.css';\n\ntype SearchResultProps = {\n  status: SearchStatus;\n  gifList: GifImageModel[];\n  loadMore: () => void;\n};\n\nconst SearchResult = ({ status, gifList, loadMore }: SearchResultProps) => {\n  const renderGifList = () => (\n    <div className={styles.gifResultWrapper}>\n      {gifList.map((gif: GifImageModel) => (\n        <GifItem key={gif.id} imageUrl={gif.imageUrl} title={gif.title} />\n      ))}\n    </div>\n  );\n\n  const renderLoadMoreButton = () => (\n    <button className={styles.loadMoreButton} onClick={loadMore}>\n      load more\n    </button>\n  );\n\n  const renderContent = () => {\n    switch (status) {\n      case SEARCH_STATUS.FOUND:\n        return (\n          <>\n            {renderGifList()}\n            {renderLoadMoreButton()}\n          </>\n        );\n      case SEARCH_STATUS.BEFORE_SEARCH:\n        return renderGifList();\n      case SEARCH_STATUS.NO_RESULT:\n      case SEARCH_STATUS.ERROR:\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <section className={styles.searchResultSection}>\n      <ResultTitle status={status} />\n      {renderContent()}\n    </section>\n  );\n};\n\nexport default SearchResult;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchResultSection\":\"de2qwsei5MNiz7eV4rNm\",\"gifResultWrapper\":\"Sk1D0Qs59YRDsSi_PLe_\",\"loadMoreButton\":\"qrKiKyOk1oFYBTmViAam\"};","// extracted by mini-css-extract-plugin\nexport default {\"artistContainer\":\"WS5RuQ_x18SikZHTRyke\",\"profileImage\":\"XNLKxvyVOVu8lOJJSdAt\",\"profileUrl\":\"mdtZcvbaOpN76XOUKbzG\"};","import { Artist } from '../../../../models/help/artist';\n\nimport styles from './ArtistInfo.module.css';\n\nexport type ArtistProps = {\n  artist: Artist;\n};\n\nconst ArtistInfo = ({ artist }: ArtistProps) => {\n  const { name, profileUrl, profileImageUrl } = artist;\n\n  return (\n    <li className={styles.artistContainer}>\n      <img className={styles.profileImage} src={profileImageUrl} />\n      <p>\n        <a className={styles.profileUrl} href={profileUrl}>\n          {name}\n        </a>\n      </p>\n    </li>\n  );\n};\n\nexport default ArtistInfo;\n","import { Artist } from '../../../../models/help/artist';\nimport ArtistInfo from '../ArtistInfo/ArtistInfo';\n\ntype ArtistListProps = {\n  artists: Artist[];\n};\n\nconst ArtistList = ({ artists }: ArtistListProps) => {\n  return (\n    <ul>\n      {artists.map((artist, index) => {\n        return <ArtistInfo key={index} artist={artist} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ArtistList;\n","import { Artist } from '../../../../models/help/artist';\n\nconst DUMMY_ARTISTS_LENGTH = 100;\nconst DUMMY_ARTISTS: Artist[] = [\n  {\n    name: 'Pola Lucas',\n    profileUrl: 'https://giphy.com/polalucas',\n    profileImageUrl: 'https://media4.giphy.com/media/gwWAA4PYJLTtyOHkUD/giphy.gif'\n  },\n  {\n    name: 'Yizr',\n    profileUrl: 'https://giphy.com/yizr',\n    profileImageUrl:\n      'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExbjE3YWc2Ym02aWxrMDVweDRkNHRiZjdtejhxZTNuNGxlYWZqOWx4YyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/UJnRqJWD0KrbW/giphy.webp'\n  },\n  {\n    name: 'YUNGSUNG',\n    profileUrl: 'https://giphy.com/yungsung',\n    profileImageUrl: 'https://media0.giphy.com/media/lgnOH6bhb1QpUm2k6w/giphy.gif'\n  },\n  {\n    name: 'Kev Lavery',\n    profileUrl: 'https://giphy.com/kevlavery',\n    profileImageUrl: 'https://media1.giphy.com/media/ZPLluhRJiGwSttn7i2/giphy.gif'\n  },\n  {\n    name: 'Lorna Mills',\n    profileUrl: 'https://giphy.com/lornamills',\n    profileImageUrl: 'https://media1.giphy.com/media/l0Iyn1gGtCPa3x41a/200.gif'\n  }\n];\n\nconst artists = Array.from(\n  { length: DUMMY_ARTISTS_LENGTH },\n  (_v, k) => DUMMY_ARTISTS[k % DUMMY_ARTISTS.length]\n);\n\nexport const getArtists = () => artists;\n","// extracted by mini-css-extract-plugin\nexport default {\"floatingButton\":\"jQBPp9XzUlR0s47cyMvy\",\"selectedItemContainer\":\"bI_mJt1zrVbU9rgQ8O9a\",\"showSheet\":\"_xMBJVElyMLYg2be4I3S\",\"sheetTitleContainer\":\"p259JqbBpFGYE_NkFPXj\",\"sheetContentsContainer\":\"_4uL_W0scH3KiWMUSa8z\"};","import { useState } from 'react';\nimport { AiOutlineInfo, AiOutlineClose } from 'react-icons/ai';\nimport classNames from 'classnames/bind';\n\nimport ArtistList from '../ArtistList/ArtistList';\nimport { getArtists } from './artistUtil';\n\nimport styles from './HelpPanel.module.css';\n\nconst cx = classNames.bind(styles);\n\nconst HelpPanel = () => {\n  const artists = getArtists();\n  const [isShow, setIsShow] = useState(false);\n  const openSheet = () => setIsShow(true);\n  const closeSheet = () => setIsShow(false);\n\n  return (\n    <>\n      <button type=\"button\" className={styles.floatingButton} onClick={openSheet}>\n        <AiOutlineInfo color=\"white\" size=\"24px\" />\n      </button>\n      <section\n        className={cx('selectedItemContainer', {\n          showSheet: isShow\n        })}\n      >\n        <div className={styles.sheetTitleContainer}>\n          <h4>What's all this? </h4>\n          <button type=\"button\" onClick={closeSheet}>\n            <AiOutlineClose size=\"24px\" />\n          </button>\n        </div>\n        <div className={styles.sheetContentsContainer}>\n          <img src=\"https://media0.giphy.com/media/3oKIPdiPGxPI7Dze7u/giphy.gif?cid=ecf05e475f5bct6ci09g3pgn43nf6bausx33fj7f96f6ig92&rid=giphy.gif&ct=g\" />\n          <p>\n            'memegle' is powered by GIPHY, the top source for the best & newest GIFs & Animated\n            Stickers online. You can find any gif uploaded on GIPHY here.\n          </p>\n          <br />\n\n          <img src=\"https://giphy.com/static/img/artistdirectory_1040.gif\" />\n          <p>\n            If you want more, you are always welcome to contribute as an artist. Please refer to the\n            guideline&nbsp;\n            <a href=\"https://support.giphy.com/hc/en-us/articles/360019977552-How-to-Upload\">\n              here\n            </a>\n            &nbsp;and upload your work!\n          </p>\n          <br />\n          <p>Here are some artists you can refer to.</p>\n          <br />\n          <section>\n            <ArtistList artists={artists} />\n          </section>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default HelpPanel;\n","import { KeyboardEvent } from 'react';\nimport useGifSearch from './hooks/useGifSearch';\n\nimport SearchBar from './components/SearchBar/SearchBar';\nimport SearchResult from './components/SearchResult/SearchResult';\nimport HelpPanel from './components/HelpPanel/HelpPanel';\n\nimport styles from './Search.module.css';\n\nconst Search = () => {\n  const { status, searchKeyword, gifList, searchByKeyword, updateSearchKeyword, loadMore } =\n    useGifSearch();\n\n  const handleEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      searchByKeyword();\n    }\n  };\n\n  return (\n    <div className={styles.searchContainer}>\n      <SearchBar\n        searchKeyword={searchKeyword}\n        onEnter={handleEnter}\n        onChange={updateSearchKeyword}\n        onSearch={searchByKeyword}\n      />\n      <SearchResult status={status} gifList={gifList} loadMore={loadMore} />\n      <HelpPanel />\n    </div>\n  );\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"OXPtcxG6dhJUUZLVn9IN\",\"searchbarSection\":\"_NVurYTpiByfxlisvpzR\",\"searchbarContainer\":\"_IBmZT37YgXzAkcOC_ok\",\"searchbarTitle\":\"emmqCq0u8mPloc40zVmg\",\"searchInput\":\"AIq4k7cZS1EdCykvp5UL\",\"searchButton\":\"_FmPgcKZk2dzVoB60gPV\",\"searchIcon\":\"somzxAx_KoUk4uhEaNQ6\",\"searchResultSection\":\"CNXgYCzg4EJ6YGYjz5yr\",\"resultTitle\":\"NNemcyhYzsoUl3coudLV\",\"gifResultWrapper\":\"P7wROLtiW0M4yQTzvq4W\",\"loadMoreButton\":\"eod4_bWPbqsZatbh_Wd3\"};"],"names":["ApiError","Error","constructor","status","message","super","this","name","apiClient","url","response","fetch","toString","ok","json","params","newUrl","URL","Object","entries","forEach","key","value","searchParams","append","API_KEY","BASE_URL","fetchGifs","data","map","id","title","images","imageUrl","original","error","console","gifAPIService","keyword","page","api_key","q","limit","offset","rating","lang","SEARCH_STATUS","setStatus","useState","currentPageIndex","setCurrentPageIndex","gifList","setGifList","searchKeyword","setSearchKeyword","errorMessage","setErrorMessage","handleError","useEffect","gifs","searchByKeyword","length","updateSearchKeyword","e","target","loadMore","nextPageIndex","newGitList","prevGifList","onEnter","onChange","onSearch","className","type","onKeyUp","onClick","color","size","src","renderGifList","gif","renderContent","artist","profileUrl","profileImageUrl","href","artists","index","DUMMY_ARTISTS","Array","from","_v","k","getArtists","cx","isShow","setIsShow","floatingButton","showSheet","sheetTitleContainer","sheetContentsContainer"],"sourceRoot":""}